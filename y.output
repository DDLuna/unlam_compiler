Terminals unused in grammar

   INI_COM
   FIN_COM
   PYC
   PUNTO


Gramática

    0 $accept: programaStart $end

    1 $@1: /* vacío */

    2 programaStart: $@1 programa

    3 $@2: /* vacío */

    4 programa: inicioVariables $@2 cuerpoPrograma

    5 $@3: /* vacío */

    6 programa: $@3 cuerpoPrograma
    7         | inicioVariables

    8 $@4: /* vacío */

    9 inicioVariables: $@4 DEC_VAR declaracion FIN_DECVAR

   10 $@5: /* vacío */

   11 cuerpoPrograma: cuerpoPrograma $@5 sentencia

   12 $@6: /* vacío */

   13 cuerpoPrograma: $@6 sentencia

   14 sentencia: asignacion

   15 $@7: /* vacío */

   16 sentencia: $@7 iteracion

   17 $@8: /* vacío */

   18 sentencia: $@8 seleccion
   19          | PRINT CONST_STRING
   20          | PRINT ID
   21          | READ ID
   22          | declaracionConstante

   23 $@9: /* vacío */

   24 $@10: /* vacío */

   25 declaracion: declaracion COR_A $@9 listaTipos COR_C DOS_PUNTOS COR_A $@10 listaVar COR_C

   26 $@11: /* vacío */

   27 $@12: /* vacío */

   28 declaracion: COR_A $@11 listaTipos COR_C DOS_PUNTOS COR_A $@12 listaVar COR_C

   29 listaTipos: listaTipos COMA tipo
   30           | tipo

   31 tipo: ENTERO
   32     | FLOTANTE

   33 listaVar: listaVar COMA ID
   34         | ID

   35 $@13: /* vacío */

   36 declaracionConstante: CONSTANTE ID OP_ASIG $@13 tipoCte

   37 tipoCte: CONST_STRING
   38        | CONST_ENT
   39        | CONST_REAL

   40 $@14: /* vacío */

   41 $@15: /* vacío */

   42 asignacion: ID $@14 OP_ASIG $@15 expresion

   43 $@16: /* vacío */

   44 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C $@16 ELSE LLAVE_A cuerpoPrograma LLAVE_C
   45          | IF condicion LLAVE_A cuerpoPrograma LLAVE_C

   46 $@17: /* vacío */

   47 seleccion: IF condicion $@17 sentencia

   48 iteracion: REPEAT condicion LLAVE_A cuerpoPrograma LLAVE_C

   49 condicion: comparacion

   50 $@18: /* vacío */

   51 condicion: comparacion $@18 AND comparacion

   52 $@19: /* vacío */

   53 condicion: comparacion $@19 OR comparacion

   54 comparacion: expresion comparador expresion

   55 $@20: /* vacío */

   56 comparacion: OP_NEG $@20 PAR_A expresion comparador expresion PAR_C

   57 comparador: OP_COMP
   58           | OP_MAYOR
   59           | OP_MENOR
   60           | OP_MAYIG
   61           | OP_MENIG
   62           | OP_DIST

   63 $@21: /* vacío */

   64 expresion: expresion $@21 OP_SUMA termino

   65 $@22: /* vacío */

   66 expresion: expresion $@22 OP_RESTA termino
   67          | termino

   68 $@23: /* vacío */

   69 termino: termino $@23 OP_MULT factor

   70 $@24: /* vacío */

   71 termino: termino $@24 OP_DIV factor

   72 $@25: /* vacío */

   73 termino: termino $@25 DIV_ENT factor

   74 $@26: /* vacío */

   75 termino: termino $@26 MODULO factor
   76        | factor

   77 $@27: /* vacío */

   78 factor: $@27 PAR_A expresion PAR_C
   79       | ID
   80       | CONST_ENT
   81       | CONST_REAL


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
OP_SUMA (258) 64
OP_RESTA (259) 66
OP_MULT (260) 69
OP_DIV (261) 71
OP_ASIG (262) 36 42
OP_COMP (263) 57
OP_MAYOR (264) 58
OP_MENOR (265) 59
OP_MAYIG (266) 60
OP_MENIG (267) 61
OP_DIST (268) 62
OP_NEG (269) 56
INI_COM (270)
FIN_COM (271)
IF (272) 44 45 47
ELSE (273) 44
REPEAT (274) 48
PRINT (275) 19 20
READ (276) 21
DEC_VAR (277) 9
FIN_DECVAR (278) 9
ENTERO (279) 31
FLOTANTE (280) 32
AND (281) 51
OR (282) 53
CONSTANTE (283) 36
MODULO (284) 75
DIV_ENT (285) 73
PAR_A (286) 56 78
PAR_C (287) 56 78
COR_A (288) 25 28
COR_C (289) 25 28
LLAVE_A (290) 44 45 48
LLAVE_C (291) 44 45 48
PYC (292)
COMA (293) 29 33
PUNTO (294)
DOS_PUNTOS (295) 25 28
ID (296) 20 21 33 34 36 42 79
CONST_ENT (297) 38 80
CONST_REAL (298) 39 81
CONST_STRING (299) 19 37


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
programaStart (46)
    en la izquierda: 2, en la derecha: 0
$@1 (47)
    en la izquierda: 1, en la derecha: 2
programa (48)
    en la izquierda: 4 6 7, en la derecha: 2
$@2 (49)
    en la izquierda: 3, en la derecha: 4
$@3 (50)
    en la izquierda: 5, en la derecha: 6
inicioVariables (51)
    en la izquierda: 9, en la derecha: 4 7
$@4 (52)
    en la izquierda: 8, en la derecha: 9
cuerpoPrograma (53)
    en la izquierda: 11 13, en la derecha: 4 6 11 44 45 48
$@5 (54)
    en la izquierda: 10, en la derecha: 11
$@6 (55)
    en la izquierda: 12, en la derecha: 13
sentencia (56)
    en la izquierda: 14 16 18 19 20 21 22, en la derecha: 11 13 47
$@7 (57)
    en la izquierda: 15, en la derecha: 16
$@8 (58)
    en la izquierda: 17, en la derecha: 18
declaracion (59)
    en la izquierda: 25 28, en la derecha: 9 25
$@9 (60)
    en la izquierda: 23, en la derecha: 25
$@10 (61)
    en la izquierda: 24, en la derecha: 25
$@11 (62)
    en la izquierda: 26, en la derecha: 28
$@12 (63)
    en la izquierda: 27, en la derecha: 28
listaTipos (64)
    en la izquierda: 29 30, en la derecha: 25 28 29
tipo (65)
    en la izquierda: 31 32, en la derecha: 29 30
listaVar (66)
    en la izquierda: 33 34, en la derecha: 25 28 33
declaracionConstante (67)
    en la izquierda: 36, en la derecha: 22
$@13 (68)
    en la izquierda: 35, en la derecha: 36
tipoCte (69)
    en la izquierda: 37 38 39, en la derecha: 36
asignacion (70)
    en la izquierda: 42, en la derecha: 14
$@14 (71)
    en la izquierda: 40, en la derecha: 42
$@15 (72)
    en la izquierda: 41, en la derecha: 42
seleccion (73)
    en la izquierda: 44 45 47, en la derecha: 18
$@16 (74)
    en la izquierda: 43, en la derecha: 44
$@17 (75)
    en la izquierda: 46, en la derecha: 47
iteracion (76)
    en la izquierda: 48, en la derecha: 16
condicion (77)
    en la izquierda: 49 51 53, en la derecha: 44 45 47 48
$@18 (78)
    en la izquierda: 50, en la derecha: 51
$@19 (79)
    en la izquierda: 52, en la derecha: 53
comparacion (80)
    en la izquierda: 54 56, en la derecha: 49 51 53
$@20 (81)
    en la izquierda: 55, en la derecha: 56
comparador (82)
    en la izquierda: 57 58 59 60 61 62, en la derecha: 54 56
expresion (83)
    en la izquierda: 64 66 67, en la derecha: 42 54 56 64 66 78
$@21 (84)
    en la izquierda: 63, en la derecha: 64
$@22 (85)
    en la izquierda: 65, en la derecha: 66
termino (86)
    en la izquierda: 69 71 73 75 76, en la derecha: 64 66 67 69 71
    73 75
$@23 (87)
    en la izquierda: 68, en la derecha: 69
$@24 (88)
    en la izquierda: 70, en la derecha: 71
$@25 (89)
    en la izquierda: 72, en la derecha: 73
$@26 (90)
    en la izquierda: 74, en la derecha: 75
factor (91)
    en la izquierda: 78 79 80 81, en la derecha: 69 71 73 75 76
$@27 (92)
    en la izquierda: 77, en la derecha: 78


estado 0

    0 $accept: . programaStart $end

    $default  reduce usando la regla 1 ($@1)

    programaStart  ir al estado 1
    $@1            ir al estado 2


estado 1

    0 $accept: programaStart . $end

    $end  desplazar e ir al estado 3


estado 2

    2 programaStart: $@1 . programa

    DEC_VAR   reduce usando la regla 8 ($@4)
    $default  reduce usando la regla 5 ($@3)

    programa         ir al estado 4
    $@3              ir al estado 5
    inicioVariables  ir al estado 6
    $@4              ir al estado 7


estado 3

    0 $accept: programaStart $end .

    $default  aceptar


estado 4

    2 programaStart: $@1 programa .

    $default  reduce usando la regla 2 (programaStart)


estado 5

    6 programa: $@3 . cuerpoPrograma

    $default  reduce usando la regla 12 ($@6)

    cuerpoPrograma  ir al estado 8
    $@6             ir al estado 9


estado 6

    4 programa: inicioVariables . $@2 cuerpoPrograma
    7         | inicioVariables .

    $end      reduce usando la regla 7 (programa)
    $default  reduce usando la regla 3 ($@2)

    $@2  ir al estado 10


estado 7

    9 inicioVariables: $@4 . DEC_VAR declaracion FIN_DECVAR

    DEC_VAR  desplazar e ir al estado 11


estado 8

    6 programa: $@3 cuerpoPrograma .
   11 cuerpoPrograma: cuerpoPrograma . $@5 sentencia

    $end      reduce usando la regla 6 (programa)
    $default  reduce usando la regla 10 ($@5)

    $@5  ir al estado 12


estado 9

   13 cuerpoPrograma: $@6 . sentencia

    PRINT      desplazar e ir al estado 13
    READ       desplazar e ir al estado 14
    CONSTANTE  desplazar e ir al estado 15
    ID         desplazar e ir al estado 16

    IF        reduce usando la regla 17 ($@8)
    $default  reduce usando la regla 15 ($@7)

    sentencia             ir al estado 17
    $@7                   ir al estado 18
    $@8                   ir al estado 19
    declaracionConstante  ir al estado 20
    asignacion            ir al estado 21


estado 10

    4 programa: inicioVariables $@2 . cuerpoPrograma

    $default  reduce usando la regla 12 ($@6)

    cuerpoPrograma  ir al estado 22
    $@6             ir al estado 9


estado 11

    9 inicioVariables: $@4 DEC_VAR . declaracion FIN_DECVAR

    COR_A  desplazar e ir al estado 23

    declaracion  ir al estado 24


estado 12

   11 cuerpoPrograma: cuerpoPrograma $@5 . sentencia

    PRINT      desplazar e ir al estado 13
    READ       desplazar e ir al estado 14
    CONSTANTE  desplazar e ir al estado 15
    ID         desplazar e ir al estado 16

    IF        reduce usando la regla 17 ($@8)
    $default  reduce usando la regla 15 ($@7)

    sentencia             ir al estado 25
    $@7                   ir al estado 18
    $@8                   ir al estado 19
    declaracionConstante  ir al estado 20
    asignacion            ir al estado 21


estado 13

   19 sentencia: PRINT . CONST_STRING
   20          | PRINT . ID

    ID            desplazar e ir al estado 26
    CONST_STRING  desplazar e ir al estado 27


estado 14

   21 sentencia: READ . ID

    ID  desplazar e ir al estado 28


estado 15

   36 declaracionConstante: CONSTANTE . ID OP_ASIG $@13 tipoCte

    ID  desplazar e ir al estado 29


estado 16

   42 asignacion: ID . $@14 OP_ASIG $@15 expresion

    $default  reduce usando la regla 40 ($@14)

    $@14  ir al estado 30


estado 17

   13 cuerpoPrograma: $@6 sentencia .

    $default  reduce usando la regla 13 (cuerpoPrograma)


estado 18

   16 sentencia: $@7 . iteracion

    REPEAT  desplazar e ir al estado 31

    iteracion  ir al estado 32


estado 19

   18 sentencia: $@8 . seleccion

    IF  desplazar e ir al estado 33

    seleccion  ir al estado 34


estado 20

   22 sentencia: declaracionConstante .

    $default  reduce usando la regla 22 (sentencia)


estado 21

   14 sentencia: asignacion .

    $default  reduce usando la regla 14 (sentencia)


estado 22

    4 programa: inicioVariables $@2 cuerpoPrograma .
   11 cuerpoPrograma: cuerpoPrograma . $@5 sentencia

    $end      reduce usando la regla 4 (programa)
    $default  reduce usando la regla 10 ($@5)

    $@5  ir al estado 12


estado 23

   28 declaracion: COR_A . $@11 listaTipos COR_C DOS_PUNTOS COR_A $@12 listaVar COR_C

    $default  reduce usando la regla 26 ($@11)

    $@11  ir al estado 35


estado 24

    9 inicioVariables: $@4 DEC_VAR declaracion . FIN_DECVAR
   25 declaracion: declaracion . COR_A $@9 listaTipos COR_C DOS_PUNTOS COR_A $@10 listaVar COR_C

    FIN_DECVAR  desplazar e ir al estado 36
    COR_A       desplazar e ir al estado 37


estado 25

   11 cuerpoPrograma: cuerpoPrograma $@5 sentencia .

    $default  reduce usando la regla 11 (cuerpoPrograma)


estado 26

   20 sentencia: PRINT ID .

    $default  reduce usando la regla 20 (sentencia)


estado 27

   19 sentencia: PRINT CONST_STRING .

    $default  reduce usando la regla 19 (sentencia)


estado 28

   21 sentencia: READ ID .

    $default  reduce usando la regla 21 (sentencia)


estado 29

   36 declaracionConstante: CONSTANTE ID . OP_ASIG $@13 tipoCte

    OP_ASIG  desplazar e ir al estado 38


estado 30

   42 asignacion: ID $@14 . OP_ASIG $@15 expresion

    OP_ASIG  desplazar e ir al estado 39


estado 31

   48 iteracion: REPEAT . condicion LLAVE_A cuerpoPrograma LLAVE_C

    OP_NEG      desplazar e ir al estado 40
    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    condicion    ir al estado 44
    comparacion  ir al estado 45
    expresion    ir al estado 46
    termino      ir al estado 47
    factor       ir al estado 48
    $@27         ir al estado 49


estado 32

   16 sentencia: $@7 iteracion .

    $default  reduce usando la regla 16 (sentencia)


estado 33

   44 seleccion: IF . condicion LLAVE_A cuerpoPrograma LLAVE_C $@16 ELSE LLAVE_A cuerpoPrograma LLAVE_C
   45          | IF . condicion LLAVE_A cuerpoPrograma LLAVE_C
   47          | IF . condicion $@17 sentencia

    OP_NEG      desplazar e ir al estado 40
    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    condicion    ir al estado 50
    comparacion  ir al estado 45
    expresion    ir al estado 46
    termino      ir al estado 47
    factor       ir al estado 48
    $@27         ir al estado 49


estado 34

   18 sentencia: $@8 seleccion .

    $default  reduce usando la regla 18 (sentencia)


estado 35

   28 declaracion: COR_A $@11 . listaTipos COR_C DOS_PUNTOS COR_A $@12 listaVar COR_C

    ENTERO    desplazar e ir al estado 51
    FLOTANTE  desplazar e ir al estado 52

    listaTipos  ir al estado 53
    tipo        ir al estado 54


estado 36

    9 inicioVariables: $@4 DEC_VAR declaracion FIN_DECVAR .

    $default  reduce usando la regla 9 (inicioVariables)


estado 37

   25 declaracion: declaracion COR_A . $@9 listaTipos COR_C DOS_PUNTOS COR_A $@10 listaVar COR_C

    $default  reduce usando la regla 23 ($@9)

    $@9  ir al estado 55


estado 38

   36 declaracionConstante: CONSTANTE ID OP_ASIG . $@13 tipoCte

    $default  reduce usando la regla 35 ($@13)

    $@13  ir al estado 56


estado 39

   42 asignacion: ID $@14 OP_ASIG . $@15 expresion

    $default  reduce usando la regla 41 ($@15)

    $@15  ir al estado 57


estado 40

   56 comparacion: OP_NEG . $@20 PAR_A expresion comparador expresion PAR_C

    $default  reduce usando la regla 55 ($@20)

    $@20  ir al estado 58


estado 41

   79 factor: ID .

    $default  reduce usando la regla 79 (factor)


estado 42

   80 factor: CONST_ENT .

    $default  reduce usando la regla 80 (factor)


estado 43

   81 factor: CONST_REAL .

    $default  reduce usando la regla 81 (factor)


estado 44

   48 iteracion: REPEAT condicion . LLAVE_A cuerpoPrograma LLAVE_C

    LLAVE_A  desplazar e ir al estado 59


estado 45

   49 condicion: comparacion .
   51          | comparacion . $@18 AND comparacion
   53          | comparacion . $@19 OR comparacion

    AND       reduce usando la regla 50 ($@18)
    OR        reduce usando la regla 52 ($@19)
    $default  reduce usando la regla 49 (condicion)

    $@18  ir al estado 60
    $@19  ir al estado 61


estado 46

   54 comparacion: expresion . comparador expresion
   64 expresion: expresion . $@21 OP_SUMA termino
   66          | expresion . $@22 OP_RESTA termino

    OP_COMP   desplazar e ir al estado 62
    OP_MAYOR  desplazar e ir al estado 63
    OP_MENOR  desplazar e ir al estado 64
    OP_MAYIG  desplazar e ir al estado 65
    OP_MENIG  desplazar e ir al estado 66
    OP_DIST   desplazar e ir al estado 67

    OP_RESTA  reduce usando la regla 65 ($@22)
    $default  reduce usando la regla 63 ($@21)

    comparador  ir al estado 68
    $@21        ir al estado 69
    $@22        ir al estado 70


estado 47

   67 expresion: termino .
   69 termino: termino . $@23 OP_MULT factor
   71        | termino . $@24 OP_DIV factor
   73        | termino . $@25 DIV_ENT factor
   75        | termino . $@26 MODULO factor

    OP_MULT   reduce usando la regla 68 ($@23)
    OP_DIV    reduce usando la regla 70 ($@24)
    MODULO    reduce usando la regla 74 ($@26)
    DIV_ENT   reduce usando la regla 72 ($@25)
    $default  reduce usando la regla 67 (expresion)

    $@23  ir al estado 71
    $@24  ir al estado 72
    $@25  ir al estado 73
    $@26  ir al estado 74


estado 48

   76 termino: factor .

    $default  reduce usando la regla 76 (termino)


estado 49

   78 factor: $@27 . PAR_A expresion PAR_C

    PAR_A  desplazar e ir al estado 75


estado 50

   44 seleccion: IF condicion . LLAVE_A cuerpoPrograma LLAVE_C $@16 ELSE LLAVE_A cuerpoPrograma LLAVE_C
   45          | IF condicion . LLAVE_A cuerpoPrograma LLAVE_C
   47          | IF condicion . $@17 sentencia

    LLAVE_A  desplazar e ir al estado 76

    $default  reduce usando la regla 46 ($@17)

    $@17  ir al estado 77


estado 51

   31 tipo: ENTERO .

    $default  reduce usando la regla 31 (tipo)


estado 52

   32 tipo: FLOTANTE .

    $default  reduce usando la regla 32 (tipo)


estado 53

   28 declaracion: COR_A $@11 listaTipos . COR_C DOS_PUNTOS COR_A $@12 listaVar COR_C
   29 listaTipos: listaTipos . COMA tipo

    COR_C  desplazar e ir al estado 78
    COMA   desplazar e ir al estado 79


estado 54

   30 listaTipos: tipo .

    $default  reduce usando la regla 30 (listaTipos)


estado 55

   25 declaracion: declaracion COR_A $@9 . listaTipos COR_C DOS_PUNTOS COR_A $@10 listaVar COR_C

    ENTERO    desplazar e ir al estado 51
    FLOTANTE  desplazar e ir al estado 52

    listaTipos  ir al estado 80
    tipo        ir al estado 54


estado 56

   36 declaracionConstante: CONSTANTE ID OP_ASIG $@13 . tipoCte

    CONST_ENT     desplazar e ir al estado 81
    CONST_REAL    desplazar e ir al estado 82
    CONST_STRING  desplazar e ir al estado 83

    tipoCte  ir al estado 84


estado 57

   42 asignacion: ID $@14 OP_ASIG $@15 . expresion

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    expresion  ir al estado 85
    termino    ir al estado 47
    factor     ir al estado 48
    $@27       ir al estado 49


estado 58

   56 comparacion: OP_NEG $@20 . PAR_A expresion comparador expresion PAR_C

    PAR_A  desplazar e ir al estado 86


estado 59

   48 iteracion: REPEAT condicion LLAVE_A . cuerpoPrograma LLAVE_C

    $default  reduce usando la regla 12 ($@6)

    cuerpoPrograma  ir al estado 87
    $@6             ir al estado 9


estado 60

   51 condicion: comparacion $@18 . AND comparacion

    AND  desplazar e ir al estado 88


estado 61

   53 condicion: comparacion $@19 . OR comparacion

    OR  desplazar e ir al estado 89


estado 62

   57 comparador: OP_COMP .

    $default  reduce usando la regla 57 (comparador)


estado 63

   58 comparador: OP_MAYOR .

    $default  reduce usando la regla 58 (comparador)


estado 64

   59 comparador: OP_MENOR .

    $default  reduce usando la regla 59 (comparador)


estado 65

   60 comparador: OP_MAYIG .

    $default  reduce usando la regla 60 (comparador)


estado 66

   61 comparador: OP_MENIG .

    $default  reduce usando la regla 61 (comparador)


estado 67

   62 comparador: OP_DIST .

    $default  reduce usando la regla 62 (comparador)


estado 68

   54 comparacion: expresion comparador . expresion

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    expresion  ir al estado 90
    termino    ir al estado 47
    factor     ir al estado 48
    $@27       ir al estado 49


estado 69

   64 expresion: expresion $@21 . OP_SUMA termino

    OP_SUMA  desplazar e ir al estado 91


estado 70

   66 expresion: expresion $@22 . OP_RESTA termino

    OP_RESTA  desplazar e ir al estado 92


estado 71

   69 termino: termino $@23 . OP_MULT factor

    OP_MULT  desplazar e ir al estado 93


estado 72

   71 termino: termino $@24 . OP_DIV factor

    OP_DIV  desplazar e ir al estado 94


estado 73

   73 termino: termino $@25 . DIV_ENT factor

    DIV_ENT  desplazar e ir al estado 95


estado 74

   75 termino: termino $@26 . MODULO factor

    MODULO  desplazar e ir al estado 96


estado 75

   78 factor: $@27 PAR_A . expresion PAR_C

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    expresion  ir al estado 97
    termino    ir al estado 47
    factor     ir al estado 48
    $@27       ir al estado 49


estado 76

   44 seleccion: IF condicion LLAVE_A . cuerpoPrograma LLAVE_C $@16 ELSE LLAVE_A cuerpoPrograma LLAVE_C
   45          | IF condicion LLAVE_A . cuerpoPrograma LLAVE_C

    $default  reduce usando la regla 12 ($@6)

    cuerpoPrograma  ir al estado 98
    $@6             ir al estado 9


estado 77

   47 seleccion: IF condicion $@17 . sentencia

    PRINT      desplazar e ir al estado 13
    READ       desplazar e ir al estado 14
    CONSTANTE  desplazar e ir al estado 15
    ID         desplazar e ir al estado 16

    IF        reduce usando la regla 17 ($@8)
    $default  reduce usando la regla 15 ($@7)

    sentencia             ir al estado 99
    $@7                   ir al estado 18
    $@8                   ir al estado 19
    declaracionConstante  ir al estado 20
    asignacion            ir al estado 21


estado 78

   28 declaracion: COR_A $@11 listaTipos COR_C . DOS_PUNTOS COR_A $@12 listaVar COR_C

    DOS_PUNTOS  desplazar e ir al estado 100


estado 79

   29 listaTipos: listaTipos COMA . tipo

    ENTERO    desplazar e ir al estado 51
    FLOTANTE  desplazar e ir al estado 52

    tipo  ir al estado 101


estado 80

   25 declaracion: declaracion COR_A $@9 listaTipos . COR_C DOS_PUNTOS COR_A $@10 listaVar COR_C
   29 listaTipos: listaTipos . COMA tipo

    COR_C  desplazar e ir al estado 102
    COMA   desplazar e ir al estado 79


estado 81

   38 tipoCte: CONST_ENT .

    $default  reduce usando la regla 38 (tipoCte)


estado 82

   39 tipoCte: CONST_REAL .

    $default  reduce usando la regla 39 (tipoCte)


estado 83

   37 tipoCte: CONST_STRING .

    $default  reduce usando la regla 37 (tipoCte)


estado 84

   36 declaracionConstante: CONSTANTE ID OP_ASIG $@13 tipoCte .

    $default  reduce usando la regla 36 (declaracionConstante)


estado 85

   42 asignacion: ID $@14 OP_ASIG $@15 expresion .
   64 expresion: expresion . $@21 OP_SUMA termino
   66          | expresion . $@22 OP_RESTA termino

    OP_SUMA   reduce usando la regla 63 ($@21)
    OP_RESTA  reduce usando la regla 65 ($@22)
    $default  reduce usando la regla 42 (asignacion)

    $@21  ir al estado 69
    $@22  ir al estado 70


estado 86

   56 comparacion: OP_NEG $@20 PAR_A . expresion comparador expresion PAR_C

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    expresion  ir al estado 103
    termino    ir al estado 47
    factor     ir al estado 48
    $@27       ir al estado 49


estado 87

   11 cuerpoPrograma: cuerpoPrograma . $@5 sentencia
   48 iteracion: REPEAT condicion LLAVE_A cuerpoPrograma . LLAVE_C

    LLAVE_C  desplazar e ir al estado 104

    $default  reduce usando la regla 10 ($@5)

    $@5  ir al estado 12


estado 88

   51 condicion: comparacion $@18 AND . comparacion

    OP_NEG      desplazar e ir al estado 40
    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    comparacion  ir al estado 105
    expresion    ir al estado 46
    termino      ir al estado 47
    factor       ir al estado 48
    $@27         ir al estado 49


estado 89

   53 condicion: comparacion $@19 OR . comparacion

    OP_NEG      desplazar e ir al estado 40
    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    comparacion  ir al estado 106
    expresion    ir al estado 46
    termino      ir al estado 47
    factor       ir al estado 48
    $@27         ir al estado 49


estado 90

   54 comparacion: expresion comparador expresion .
   64 expresion: expresion . $@21 OP_SUMA termino
   66          | expresion . $@22 OP_RESTA termino

    OP_SUMA   reduce usando la regla 63 ($@21)
    OP_RESTA  reduce usando la regla 65 ($@22)
    $default  reduce usando la regla 54 (comparacion)

    $@21  ir al estado 69
    $@22  ir al estado 70


estado 91

   64 expresion: expresion $@21 OP_SUMA . termino

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    termino  ir al estado 107
    factor   ir al estado 48
    $@27     ir al estado 49


estado 92

   66 expresion: expresion $@22 OP_RESTA . termino

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    termino  ir al estado 108
    factor   ir al estado 48
    $@27     ir al estado 49


estado 93

   69 termino: termino $@23 OP_MULT . factor

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    factor  ir al estado 109
    $@27    ir al estado 49


estado 94

   71 termino: termino $@24 OP_DIV . factor

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    factor  ir al estado 110
    $@27    ir al estado 49


estado 95

   73 termino: termino $@25 DIV_ENT . factor

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    factor  ir al estado 111
    $@27    ir al estado 49


estado 96

   75 termino: termino $@26 MODULO . factor

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    factor  ir al estado 112
    $@27    ir al estado 49


estado 97

   64 expresion: expresion . $@21 OP_SUMA termino
   66          | expresion . $@22 OP_RESTA termino
   78 factor: $@27 PAR_A expresion . PAR_C

    PAR_C  desplazar e ir al estado 113

    OP_RESTA  reduce usando la regla 65 ($@22)
    $default  reduce usando la regla 63 ($@21)

    $@21  ir al estado 69
    $@22  ir al estado 70


estado 98

   11 cuerpoPrograma: cuerpoPrograma . $@5 sentencia
   44 seleccion: IF condicion LLAVE_A cuerpoPrograma . LLAVE_C $@16 ELSE LLAVE_A cuerpoPrograma LLAVE_C
   45          | IF condicion LLAVE_A cuerpoPrograma . LLAVE_C

    LLAVE_C  desplazar e ir al estado 114

    $default  reduce usando la regla 10 ($@5)

    $@5  ir al estado 12


estado 99

   47 seleccion: IF condicion $@17 sentencia .

    $default  reduce usando la regla 47 (seleccion)


estado 100

   28 declaracion: COR_A $@11 listaTipos COR_C DOS_PUNTOS . COR_A $@12 listaVar COR_C

    COR_A  desplazar e ir al estado 115


estado 101

   29 listaTipos: listaTipos COMA tipo .

    $default  reduce usando la regla 29 (listaTipos)


estado 102

   25 declaracion: declaracion COR_A $@9 listaTipos COR_C . DOS_PUNTOS COR_A $@10 listaVar COR_C

    DOS_PUNTOS  desplazar e ir al estado 116


estado 103

   56 comparacion: OP_NEG $@20 PAR_A expresion . comparador expresion PAR_C
   64 expresion: expresion . $@21 OP_SUMA termino
   66          | expresion . $@22 OP_RESTA termino

    OP_COMP   desplazar e ir al estado 62
    OP_MAYOR  desplazar e ir al estado 63
    OP_MENOR  desplazar e ir al estado 64
    OP_MAYIG  desplazar e ir al estado 65
    OP_MENIG  desplazar e ir al estado 66
    OP_DIST   desplazar e ir al estado 67

    OP_RESTA  reduce usando la regla 65 ($@22)
    $default  reduce usando la regla 63 ($@21)

    comparador  ir al estado 117
    $@21        ir al estado 69
    $@22        ir al estado 70


estado 104

   48 iteracion: REPEAT condicion LLAVE_A cuerpoPrograma LLAVE_C .

    $default  reduce usando la regla 48 (iteracion)


estado 105

   51 condicion: comparacion $@18 AND comparacion .

    $default  reduce usando la regla 51 (condicion)


estado 106

   53 condicion: comparacion $@19 OR comparacion .

    $default  reduce usando la regla 53 (condicion)


estado 107

   64 expresion: expresion $@21 OP_SUMA termino .
   69 termino: termino . $@23 OP_MULT factor
   71        | termino . $@24 OP_DIV factor
   73        | termino . $@25 DIV_ENT factor
   75        | termino . $@26 MODULO factor

    OP_MULT   reduce usando la regla 68 ($@23)
    OP_DIV    reduce usando la regla 70 ($@24)
    MODULO    reduce usando la regla 74 ($@26)
    DIV_ENT   reduce usando la regla 72 ($@25)
    $default  reduce usando la regla 64 (expresion)

    $@23  ir al estado 71
    $@24  ir al estado 72
    $@25  ir al estado 73
    $@26  ir al estado 74


estado 108

   66 expresion: expresion $@22 OP_RESTA termino .
   69 termino: termino . $@23 OP_MULT factor
   71        | termino . $@24 OP_DIV factor
   73        | termino . $@25 DIV_ENT factor
   75        | termino . $@26 MODULO factor

    OP_MULT   reduce usando la regla 68 ($@23)
    OP_DIV    reduce usando la regla 70 ($@24)
    MODULO    reduce usando la regla 74 ($@26)
    DIV_ENT   reduce usando la regla 72 ($@25)
    $default  reduce usando la regla 66 (expresion)

    $@23  ir al estado 71
    $@24  ir al estado 72
    $@25  ir al estado 73
    $@26  ir al estado 74


estado 109

   69 termino: termino $@23 OP_MULT factor .

    $default  reduce usando la regla 69 (termino)


estado 110

   71 termino: termino $@24 OP_DIV factor .

    $default  reduce usando la regla 71 (termino)


estado 111

   73 termino: termino $@25 DIV_ENT factor .

    $default  reduce usando la regla 73 (termino)


estado 112

   75 termino: termino $@26 MODULO factor .

    $default  reduce usando la regla 75 (termino)


estado 113

   78 factor: $@27 PAR_A expresion PAR_C .

    $default  reduce usando la regla 78 (factor)


estado 114

   44 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C . $@16 ELSE LLAVE_A cuerpoPrograma LLAVE_C
   45          | IF condicion LLAVE_A cuerpoPrograma LLAVE_C .

    ELSE      reduce usando la regla 43 ($@16)
    $default  reduce usando la regla 45 (seleccion)

    $@16  ir al estado 118


estado 115

   28 declaracion: COR_A $@11 listaTipos COR_C DOS_PUNTOS COR_A . $@12 listaVar COR_C

    $default  reduce usando la regla 27 ($@12)

    $@12  ir al estado 119


estado 116

   25 declaracion: declaracion COR_A $@9 listaTipos COR_C DOS_PUNTOS . COR_A $@10 listaVar COR_C

    COR_A  desplazar e ir al estado 120


estado 117

   56 comparacion: OP_NEG $@20 PAR_A expresion comparador . expresion PAR_C

    ID          desplazar e ir al estado 41
    CONST_ENT   desplazar e ir al estado 42
    CONST_REAL  desplazar e ir al estado 43

    $default  reduce usando la regla 77 ($@27)

    expresion  ir al estado 121
    termino    ir al estado 47
    factor     ir al estado 48
    $@27       ir al estado 49


estado 118

   44 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C $@16 . ELSE LLAVE_A cuerpoPrograma LLAVE_C

    ELSE  desplazar e ir al estado 122


estado 119

   28 declaracion: COR_A $@11 listaTipos COR_C DOS_PUNTOS COR_A $@12 . listaVar COR_C

    ID  desplazar e ir al estado 123

    listaVar  ir al estado 124


estado 120

   25 declaracion: declaracion COR_A $@9 listaTipos COR_C DOS_PUNTOS COR_A . $@10 listaVar COR_C

    $default  reduce usando la regla 24 ($@10)

    $@10  ir al estado 125


estado 121

   56 comparacion: OP_NEG $@20 PAR_A expresion comparador expresion . PAR_C
   64 expresion: expresion . $@21 OP_SUMA termino
   66          | expresion . $@22 OP_RESTA termino

    PAR_C  desplazar e ir al estado 126

    OP_RESTA  reduce usando la regla 65 ($@22)
    $default  reduce usando la regla 63 ($@21)

    $@21  ir al estado 69
    $@22  ir al estado 70


estado 122

   44 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C $@16 ELSE . LLAVE_A cuerpoPrograma LLAVE_C

    LLAVE_A  desplazar e ir al estado 127


estado 123

   34 listaVar: ID .

    $default  reduce usando la regla 34 (listaVar)


estado 124

   28 declaracion: COR_A $@11 listaTipos COR_C DOS_PUNTOS COR_A $@12 listaVar . COR_C
   33 listaVar: listaVar . COMA ID

    COR_C  desplazar e ir al estado 128
    COMA   desplazar e ir al estado 129


estado 125

   25 declaracion: declaracion COR_A $@9 listaTipos COR_C DOS_PUNTOS COR_A $@10 . listaVar COR_C

    ID  desplazar e ir al estado 123

    listaVar  ir al estado 130


estado 126

   56 comparacion: OP_NEG $@20 PAR_A expresion comparador expresion PAR_C .

    $default  reduce usando la regla 56 (comparacion)


estado 127

   44 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C $@16 ELSE LLAVE_A . cuerpoPrograma LLAVE_C

    $default  reduce usando la regla 12 ($@6)

    cuerpoPrograma  ir al estado 131
    $@6             ir al estado 9


estado 128

   28 declaracion: COR_A $@11 listaTipos COR_C DOS_PUNTOS COR_A $@12 listaVar COR_C .

    $default  reduce usando la regla 28 (declaracion)


estado 129

   33 listaVar: listaVar COMA . ID

    ID  desplazar e ir al estado 132


estado 130

   25 declaracion: declaracion COR_A $@9 listaTipos COR_C DOS_PUNTOS COR_A $@10 listaVar . COR_C
   33 listaVar: listaVar . COMA ID

    COR_C  desplazar e ir al estado 133
    COMA   desplazar e ir al estado 129


estado 131

   11 cuerpoPrograma: cuerpoPrograma . $@5 sentencia
   44 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C $@16 ELSE LLAVE_A cuerpoPrograma . LLAVE_C

    LLAVE_C  desplazar e ir al estado 134

    $default  reduce usando la regla 10 ($@5)

    $@5  ir al estado 12


estado 132

   33 listaVar: listaVar COMA ID .

    $default  reduce usando la regla 33 (listaVar)


estado 133

   25 declaracion: declaracion COR_A $@9 listaTipos COR_C DOS_PUNTOS COR_A $@10 listaVar COR_C .

    $default  reduce usando la regla 25 (declaracion)


estado 134

   44 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C $@16 ELSE LLAVE_A cuerpoPrograma LLAVE_C .

    $default  reduce usando la regla 44 (seleccion)
