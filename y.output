Terminals unused in grammar

   INI_COM
   FIN_COM
   PYC
   PUNTO


Gramática

    0 $accept: programaStart $end

    1 programaStart: programa

    2 programa: inicioVariables cuerpoPrograma
    3         | cuerpoPrograma
    4         | inicioVariables

    5 inicioVariables: DEC_VAR declaracion FIN_DECVAR

    6 cuerpoPrograma: cuerpoPrograma sentencia
    7               | sentencia

    8 sentencia: asignacion
    9          | iteracion
   10          | seleccion
   11          | PRINT CONST_STRING
   12          | PRINT ID
   13          | READ ID
   14          | declaracionConstante

   15 declaracion: declaracion COR_A listaTipos COR_C DOS_PUNTOS COR_A listaVar COR_C
   16            | COR_A listaTipos COR_C DOS_PUNTOS COR_A listaVar COR_C

   17 listaTipos: listaTipos COMA tipo
   18           | tipo

   19 tipo: ENTERO
   20     | FLOTANTE

   21 listaVar: listaVar COMA ID
   22         | ID

   23 declaracionConstante: CONSTANTE ID OP_ASIG tipoCte

   24 tipoCte: CONST_STRING
   25        | CONST_ENT
   26        | CONST_REAL

   27 asignacion: ID OP_ASIG expresion

   28 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C ELSE LLAVE_A cuerpoPrograma LLAVE_C
   29          | IF condicion LLAVE_A cuerpoPrograma LLAVE_C
   30          | IF condicion sentencia

   31 iteracion: REPEAT condicion LLAVE_A cuerpoPrograma LLAVE_C

   32 condicion: comparacion
   33          | comparacion AND comparacion
   34          | comparacion OR comparacion
   35          | OP_NEG PAR_A comparacion PAR_C

   36 comparacion: expresion comparador expresion

   37 comparador: OP_COMP
   38           | OP_MAYOR
   39           | OP_MENOR
   40           | OP_MAYIG
   41           | OP_MENIG
   42           | OP_DIST

   43 expresion: expresion OP_SUMA termino
   44          | expresion OP_RESTA termino
   45          | termino

   46 termino: termino OP_MULT factor
   47        | termino OP_DIV factor
   48        | termino DIV_ENT factor
   49        | termino MODULO factor
   50        | factor

   51 factor: PAR_A expresion PAR_C
   52       | ID
   53       | CONST_ENT
   54       | CONST_REAL


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
OP_SUMA (258) 43
OP_RESTA (259) 44
OP_MULT (260) 46
OP_DIV (261) 47
OP_ASIG (262) 23 27
OP_COMP (263) 37
OP_MAYOR (264) 38
OP_MENOR (265) 39
OP_MAYIG (266) 40
OP_MENIG (267) 41
OP_DIST (268) 42
OP_NEG (269) 35
INI_COM (270)
FIN_COM (271)
IF (272) 28 29 30
ELSE (273) 28
REPEAT (274) 31
PRINT (275) 11 12
READ (276) 13
DEC_VAR (277) 5
FIN_DECVAR (278) 5
ENTERO (279) 19
FLOTANTE (280) 20
AND (281) 33
OR (282) 34
CONSTANTE (283) 23
MODULO (284) 49
DIV_ENT (285) 48
PAR_A (286) 35 51
PAR_C (287) 35 51
COR_A (288) 15 16
COR_C (289) 15 16
LLAVE_A (290) 28 29 31
LLAVE_C (291) 28 29 31
PYC (292)
COMA (293) 17 21
PUNTO (294)
DOS_PUNTOS (295) 15 16
ID (296) 12 13 21 22 23 27 52
CONST_ENT (297) 25 53
CONST_REAL (298) 26 54
CONST_STRING (299) 11 24


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
programaStart (46)
    en la izquierda: 1, en la derecha: 0
programa (47)
    en la izquierda: 2 3 4, en la derecha: 1
inicioVariables (48)
    en la izquierda: 5, en la derecha: 2 4
cuerpoPrograma (49)
    en la izquierda: 6 7, en la derecha: 2 3 6 28 29 31
sentencia (50)
    en la izquierda: 8 9 10 11 12 13 14, en la derecha: 6 7 30
declaracion (51)
    en la izquierda: 15 16, en la derecha: 5 15
listaTipos (52)
    en la izquierda: 17 18, en la derecha: 15 16 17
tipo (53)
    en la izquierda: 19 20, en la derecha: 17 18
listaVar (54)
    en la izquierda: 21 22, en la derecha: 15 16 21
declaracionConstante (55)
    en la izquierda: 23, en la derecha: 14
tipoCte (56)
    en la izquierda: 24 25 26, en la derecha: 23
asignacion (57)
    en la izquierda: 27, en la derecha: 8
seleccion (58)
    en la izquierda: 28 29 30, en la derecha: 10
iteracion (59)
    en la izquierda: 31, en la derecha: 9
condicion (60)
    en la izquierda: 32 33 34 35, en la derecha: 28 29 30 31
comparacion (61)
    en la izquierda: 36, en la derecha: 32 33 34 35
comparador (62)
    en la izquierda: 37 38 39 40 41 42, en la derecha: 36
expresion (63)
    en la izquierda: 43 44 45, en la derecha: 27 36 43 44 51
termino (64)
    en la izquierda: 46 47 48 49 50, en la derecha: 43 44 45 46 47
    48 49
factor (65)
    en la izquierda: 51 52 53 54, en la derecha: 46 47 48 49 50


estado 0

    0 $accept: . programaStart $end

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    DEC_VAR    desplazar e ir al estado 5
    CONSTANTE  desplazar e ir al estado 6
    ID         desplazar e ir al estado 7

    programaStart         ir al estado 8
    programa              ir al estado 9
    inicioVariables       ir al estado 10
    cuerpoPrograma        ir al estado 11
    sentencia             ir al estado 12
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 1

   28 seleccion: IF . condicion LLAVE_A cuerpoPrograma LLAVE_C ELSE LLAVE_A cuerpoPrograma LLAVE_C
   29          | IF . condicion LLAVE_A cuerpoPrograma LLAVE_C
   30          | IF . condicion sentencia

    OP_NEG      desplazar e ir al estado 17
    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    condicion    ir al estado 22
    comparacion  ir al estado 23
    expresion    ir al estado 24
    termino      ir al estado 25
    factor       ir al estado 26


estado 2

   31 iteracion: REPEAT . condicion LLAVE_A cuerpoPrograma LLAVE_C

    OP_NEG      desplazar e ir al estado 17
    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    condicion    ir al estado 27
    comparacion  ir al estado 23
    expresion    ir al estado 24
    termino      ir al estado 25
    factor       ir al estado 26


estado 3

   11 sentencia: PRINT . CONST_STRING
   12          | PRINT . ID

    ID            desplazar e ir al estado 28
    CONST_STRING  desplazar e ir al estado 29


estado 4

   13 sentencia: READ . ID

    ID  desplazar e ir al estado 30


estado 5

    5 inicioVariables: DEC_VAR . declaracion FIN_DECVAR

    COR_A  desplazar e ir al estado 31

    declaracion  ir al estado 32


estado 6

   23 declaracionConstante: CONSTANTE . ID OP_ASIG tipoCte

    ID  desplazar e ir al estado 33


estado 7

   27 asignacion: ID . OP_ASIG expresion

    OP_ASIG  desplazar e ir al estado 34


estado 8

    0 $accept: programaStart . $end

    $end  desplazar e ir al estado 35


estado 9

    1 programaStart: programa .

    $default  reduce usando la regla 1 (programaStart)


estado 10

    2 programa: inicioVariables . cuerpoPrograma
    4         | inicioVariables .

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    ID         desplazar e ir al estado 7

    $default  reduce usando la regla 4 (programa)

    cuerpoPrograma        ir al estado 36
    sentencia             ir al estado 12
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 11

    3 programa: cuerpoPrograma .
    6 cuerpoPrograma: cuerpoPrograma . sentencia

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    ID         desplazar e ir al estado 7

    $default  reduce usando la regla 3 (programa)

    sentencia             ir al estado 37
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 12

    7 cuerpoPrograma: sentencia .

    $default  reduce usando la regla 7 (cuerpoPrograma)


estado 13

   14 sentencia: declaracionConstante .

    $default  reduce usando la regla 14 (sentencia)


estado 14

    8 sentencia: asignacion .

    $default  reduce usando la regla 8 (sentencia)


estado 15

   10 sentencia: seleccion .

    $default  reduce usando la regla 10 (sentencia)


estado 16

    9 sentencia: iteracion .

    $default  reduce usando la regla 9 (sentencia)


estado 17

   35 condicion: OP_NEG . PAR_A comparacion PAR_C

    PAR_A  desplazar e ir al estado 38


estado 18

   51 factor: PAR_A . expresion PAR_C

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    expresion  ir al estado 39
    termino    ir al estado 25
    factor     ir al estado 26


estado 19

   52 factor: ID .

    $default  reduce usando la regla 52 (factor)


estado 20

   53 factor: CONST_ENT .

    $default  reduce usando la regla 53 (factor)


estado 21

   54 factor: CONST_REAL .

    $default  reduce usando la regla 54 (factor)


estado 22

   28 seleccion: IF condicion . LLAVE_A cuerpoPrograma LLAVE_C ELSE LLAVE_A cuerpoPrograma LLAVE_C
   29          | IF condicion . LLAVE_A cuerpoPrograma LLAVE_C
   30          | IF condicion . sentencia

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    LLAVE_A    desplazar e ir al estado 40
    ID         desplazar e ir al estado 7

    sentencia             ir al estado 41
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 23

   32 condicion: comparacion .
   33          | comparacion . AND comparacion
   34          | comparacion . OR comparacion

    AND  desplazar e ir al estado 42
    OR   desplazar e ir al estado 43

    $default  reduce usando la regla 32 (condicion)


estado 24

   36 comparacion: expresion . comparador expresion
   43 expresion: expresion . OP_SUMA termino
   44          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 44
    OP_RESTA  desplazar e ir al estado 45
    OP_COMP   desplazar e ir al estado 46
    OP_MAYOR  desplazar e ir al estado 47
    OP_MENOR  desplazar e ir al estado 48
    OP_MAYIG  desplazar e ir al estado 49
    OP_MENIG  desplazar e ir al estado 50
    OP_DIST   desplazar e ir al estado 51

    comparador  ir al estado 52


estado 25

   45 expresion: termino .
   46 termino: termino . OP_MULT factor
   47        | termino . OP_DIV factor
   48        | termino . DIV_ENT factor
   49        | termino . MODULO factor

    OP_MULT  desplazar e ir al estado 53
    OP_DIV   desplazar e ir al estado 54
    MODULO   desplazar e ir al estado 55
    DIV_ENT  desplazar e ir al estado 56

    $default  reduce usando la regla 45 (expresion)


estado 26

   50 termino: factor .

    $default  reduce usando la regla 50 (termino)


estado 27

   31 iteracion: REPEAT condicion . LLAVE_A cuerpoPrograma LLAVE_C

    LLAVE_A  desplazar e ir al estado 57


estado 28

   12 sentencia: PRINT ID .

    $default  reduce usando la regla 12 (sentencia)


estado 29

   11 sentencia: PRINT CONST_STRING .

    $default  reduce usando la regla 11 (sentencia)


estado 30

   13 sentencia: READ ID .

    $default  reduce usando la regla 13 (sentencia)


estado 31

   16 declaracion: COR_A . listaTipos COR_C DOS_PUNTOS COR_A listaVar COR_C

    ENTERO    desplazar e ir al estado 58
    FLOTANTE  desplazar e ir al estado 59

    listaTipos  ir al estado 60
    tipo        ir al estado 61


estado 32

    5 inicioVariables: DEC_VAR declaracion . FIN_DECVAR
   15 declaracion: declaracion . COR_A listaTipos COR_C DOS_PUNTOS COR_A listaVar COR_C

    FIN_DECVAR  desplazar e ir al estado 62
    COR_A       desplazar e ir al estado 63


estado 33

   23 declaracionConstante: CONSTANTE ID . OP_ASIG tipoCte

    OP_ASIG  desplazar e ir al estado 64


estado 34

   27 asignacion: ID OP_ASIG . expresion

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    expresion  ir al estado 65
    termino    ir al estado 25
    factor     ir al estado 26


estado 35

    0 $accept: programaStart $end .

    $default  aceptar


estado 36

    2 programa: inicioVariables cuerpoPrograma .
    6 cuerpoPrograma: cuerpoPrograma . sentencia

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    ID         desplazar e ir al estado 7

    $default  reduce usando la regla 2 (programa)

    sentencia             ir al estado 37
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 37

    6 cuerpoPrograma: cuerpoPrograma sentencia .

    $default  reduce usando la regla 6 (cuerpoPrograma)


estado 38

   35 condicion: OP_NEG PAR_A . comparacion PAR_C

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    comparacion  ir al estado 66
    expresion    ir al estado 24
    termino      ir al estado 25
    factor       ir al estado 26


estado 39

   43 expresion: expresion . OP_SUMA termino
   44          | expresion . OP_RESTA termino
   51 factor: PAR_A expresion . PAR_C

    OP_SUMA   desplazar e ir al estado 44
    OP_RESTA  desplazar e ir al estado 45
    PAR_C     desplazar e ir al estado 67


estado 40

   28 seleccion: IF condicion LLAVE_A . cuerpoPrograma LLAVE_C ELSE LLAVE_A cuerpoPrograma LLAVE_C
   29          | IF condicion LLAVE_A . cuerpoPrograma LLAVE_C

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    ID         desplazar e ir al estado 7

    cuerpoPrograma        ir al estado 68
    sentencia             ir al estado 12
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 41

   30 seleccion: IF condicion sentencia .

    $default  reduce usando la regla 30 (seleccion)


estado 42

   33 condicion: comparacion AND . comparacion

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    comparacion  ir al estado 69
    expresion    ir al estado 24
    termino      ir al estado 25
    factor       ir al estado 26


estado 43

   34 condicion: comparacion OR . comparacion

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    comparacion  ir al estado 70
    expresion    ir al estado 24
    termino      ir al estado 25
    factor       ir al estado 26


estado 44

   43 expresion: expresion OP_SUMA . termino

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    termino  ir al estado 71
    factor   ir al estado 26


estado 45

   44 expresion: expresion OP_RESTA . termino

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    termino  ir al estado 72
    factor   ir al estado 26


estado 46

   37 comparador: OP_COMP .

    $default  reduce usando la regla 37 (comparador)


estado 47

   38 comparador: OP_MAYOR .

    $default  reduce usando la regla 38 (comparador)


estado 48

   39 comparador: OP_MENOR .

    $default  reduce usando la regla 39 (comparador)


estado 49

   40 comparador: OP_MAYIG .

    $default  reduce usando la regla 40 (comparador)


estado 50

   41 comparador: OP_MENIG .

    $default  reduce usando la regla 41 (comparador)


estado 51

   42 comparador: OP_DIST .

    $default  reduce usando la regla 42 (comparador)


estado 52

   36 comparacion: expresion comparador . expresion

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    expresion  ir al estado 73
    termino    ir al estado 25
    factor     ir al estado 26


estado 53

   46 termino: termino OP_MULT . factor

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    factor  ir al estado 74


estado 54

   47 termino: termino OP_DIV . factor

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    factor  ir al estado 75


estado 55

   49 termino: termino MODULO . factor

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    factor  ir al estado 76


estado 56

   48 termino: termino DIV_ENT . factor

    PAR_A       desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    CONST_ENT   desplazar e ir al estado 20
    CONST_REAL  desplazar e ir al estado 21

    factor  ir al estado 77


estado 57

   31 iteracion: REPEAT condicion LLAVE_A . cuerpoPrograma LLAVE_C

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    ID         desplazar e ir al estado 7

    cuerpoPrograma        ir al estado 78
    sentencia             ir al estado 12
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 58

   19 tipo: ENTERO .

    $default  reduce usando la regla 19 (tipo)


estado 59

   20 tipo: FLOTANTE .

    $default  reduce usando la regla 20 (tipo)


estado 60

   16 declaracion: COR_A listaTipos . COR_C DOS_PUNTOS COR_A listaVar COR_C
   17 listaTipos: listaTipos . COMA tipo

    COR_C  desplazar e ir al estado 79
    COMA   desplazar e ir al estado 80


estado 61

   18 listaTipos: tipo .

    $default  reduce usando la regla 18 (listaTipos)


estado 62

    5 inicioVariables: DEC_VAR declaracion FIN_DECVAR .

    $default  reduce usando la regla 5 (inicioVariables)


estado 63

   15 declaracion: declaracion COR_A . listaTipos COR_C DOS_PUNTOS COR_A listaVar COR_C

    ENTERO    desplazar e ir al estado 58
    FLOTANTE  desplazar e ir al estado 59

    listaTipos  ir al estado 81
    tipo        ir al estado 61


estado 64

   23 declaracionConstante: CONSTANTE ID OP_ASIG . tipoCte

    CONST_ENT     desplazar e ir al estado 82
    CONST_REAL    desplazar e ir al estado 83
    CONST_STRING  desplazar e ir al estado 84

    tipoCte  ir al estado 85


estado 65

   27 asignacion: ID OP_ASIG expresion .
   43 expresion: expresion . OP_SUMA termino
   44          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 44
    OP_RESTA  desplazar e ir al estado 45

    $default  reduce usando la regla 27 (asignacion)


estado 66

   35 condicion: OP_NEG PAR_A comparacion . PAR_C

    PAR_C  desplazar e ir al estado 86


estado 67

   51 factor: PAR_A expresion PAR_C .

    $default  reduce usando la regla 51 (factor)


estado 68

    6 cuerpoPrograma: cuerpoPrograma . sentencia
   28 seleccion: IF condicion LLAVE_A cuerpoPrograma . LLAVE_C ELSE LLAVE_A cuerpoPrograma LLAVE_C
   29          | IF condicion LLAVE_A cuerpoPrograma . LLAVE_C

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    LLAVE_C    desplazar e ir al estado 87
    ID         desplazar e ir al estado 7

    sentencia             ir al estado 37
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 69

   33 condicion: comparacion AND comparacion .

    $default  reduce usando la regla 33 (condicion)


estado 70

   34 condicion: comparacion OR comparacion .

    $default  reduce usando la regla 34 (condicion)


estado 71

   43 expresion: expresion OP_SUMA termino .
   46 termino: termino . OP_MULT factor
   47        | termino . OP_DIV factor
   48        | termino . DIV_ENT factor
   49        | termino . MODULO factor

    OP_MULT  desplazar e ir al estado 53
    OP_DIV   desplazar e ir al estado 54
    MODULO   desplazar e ir al estado 55
    DIV_ENT  desplazar e ir al estado 56

    $default  reduce usando la regla 43 (expresion)


estado 72

   44 expresion: expresion OP_RESTA termino .
   46 termino: termino . OP_MULT factor
   47        | termino . OP_DIV factor
   48        | termino . DIV_ENT factor
   49        | termino . MODULO factor

    OP_MULT  desplazar e ir al estado 53
    OP_DIV   desplazar e ir al estado 54
    MODULO   desplazar e ir al estado 55
    DIV_ENT  desplazar e ir al estado 56

    $default  reduce usando la regla 44 (expresion)


estado 73

   36 comparacion: expresion comparador expresion .
   43 expresion: expresion . OP_SUMA termino
   44          | expresion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 44
    OP_RESTA  desplazar e ir al estado 45

    $default  reduce usando la regla 36 (comparacion)


estado 74

   46 termino: termino OP_MULT factor .

    $default  reduce usando la regla 46 (termino)


estado 75

   47 termino: termino OP_DIV factor .

    $default  reduce usando la regla 47 (termino)


estado 76

   49 termino: termino MODULO factor .

    $default  reduce usando la regla 49 (termino)


estado 77

   48 termino: termino DIV_ENT factor .

    $default  reduce usando la regla 48 (termino)


estado 78

    6 cuerpoPrograma: cuerpoPrograma . sentencia
   31 iteracion: REPEAT condicion LLAVE_A cuerpoPrograma . LLAVE_C

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    LLAVE_C    desplazar e ir al estado 88
    ID         desplazar e ir al estado 7

    sentencia             ir al estado 37
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 79

   16 declaracion: COR_A listaTipos COR_C . DOS_PUNTOS COR_A listaVar COR_C

    DOS_PUNTOS  desplazar e ir al estado 89


estado 80

   17 listaTipos: listaTipos COMA . tipo

    ENTERO    desplazar e ir al estado 58
    FLOTANTE  desplazar e ir al estado 59

    tipo  ir al estado 90


estado 81

   15 declaracion: declaracion COR_A listaTipos . COR_C DOS_PUNTOS COR_A listaVar COR_C
   17 listaTipos: listaTipos . COMA tipo

    COR_C  desplazar e ir al estado 91
    COMA   desplazar e ir al estado 80


estado 82

   25 tipoCte: CONST_ENT .

    $default  reduce usando la regla 25 (tipoCte)


estado 83

   26 tipoCte: CONST_REAL .

    $default  reduce usando la regla 26 (tipoCte)


estado 84

   24 tipoCte: CONST_STRING .

    $default  reduce usando la regla 24 (tipoCte)


estado 85

   23 declaracionConstante: CONSTANTE ID OP_ASIG tipoCte .

    $default  reduce usando la regla 23 (declaracionConstante)


estado 86

   35 condicion: OP_NEG PAR_A comparacion PAR_C .

    $default  reduce usando la regla 35 (condicion)


estado 87

   28 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C . ELSE LLAVE_A cuerpoPrograma LLAVE_C
   29          | IF condicion LLAVE_A cuerpoPrograma LLAVE_C .

    ELSE  desplazar e ir al estado 92

    $default  reduce usando la regla 29 (seleccion)


estado 88

   31 iteracion: REPEAT condicion LLAVE_A cuerpoPrograma LLAVE_C .

    $default  reduce usando la regla 31 (iteracion)


estado 89

   16 declaracion: COR_A listaTipos COR_C DOS_PUNTOS . COR_A listaVar COR_C

    COR_A  desplazar e ir al estado 93


estado 90

   17 listaTipos: listaTipos COMA tipo .

    $default  reduce usando la regla 17 (listaTipos)


estado 91

   15 declaracion: declaracion COR_A listaTipos COR_C . DOS_PUNTOS COR_A listaVar COR_C

    DOS_PUNTOS  desplazar e ir al estado 94


estado 92

   28 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C ELSE . LLAVE_A cuerpoPrograma LLAVE_C

    LLAVE_A  desplazar e ir al estado 95


estado 93

   16 declaracion: COR_A listaTipos COR_C DOS_PUNTOS COR_A . listaVar COR_C

    ID  desplazar e ir al estado 96

    listaVar  ir al estado 97


estado 94

   15 declaracion: declaracion COR_A listaTipos COR_C DOS_PUNTOS . COR_A listaVar COR_C

    COR_A  desplazar e ir al estado 98


estado 95

   28 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C ELSE LLAVE_A . cuerpoPrograma LLAVE_C

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    ID         desplazar e ir al estado 7

    cuerpoPrograma        ir al estado 99
    sentencia             ir al estado 12
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 96

   22 listaVar: ID .

    $default  reduce usando la regla 22 (listaVar)


estado 97

   16 declaracion: COR_A listaTipos COR_C DOS_PUNTOS COR_A listaVar . COR_C
   21 listaVar: listaVar . COMA ID

    COR_C  desplazar e ir al estado 100
    COMA   desplazar e ir al estado 101


estado 98

   15 declaracion: declaracion COR_A listaTipos COR_C DOS_PUNTOS COR_A . listaVar COR_C

    ID  desplazar e ir al estado 96

    listaVar  ir al estado 102


estado 99

    6 cuerpoPrograma: cuerpoPrograma . sentencia
   28 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C ELSE LLAVE_A cuerpoPrograma . LLAVE_C

    IF         desplazar e ir al estado 1
    REPEAT     desplazar e ir al estado 2
    PRINT      desplazar e ir al estado 3
    READ       desplazar e ir al estado 4
    CONSTANTE  desplazar e ir al estado 6
    LLAVE_C    desplazar e ir al estado 103
    ID         desplazar e ir al estado 7

    sentencia             ir al estado 37
    declaracionConstante  ir al estado 13
    asignacion            ir al estado 14
    seleccion             ir al estado 15
    iteracion             ir al estado 16


estado 100

   16 declaracion: COR_A listaTipos COR_C DOS_PUNTOS COR_A listaVar COR_C .

    $default  reduce usando la regla 16 (declaracion)


estado 101

   21 listaVar: listaVar COMA . ID

    ID  desplazar e ir al estado 104


estado 102

   15 declaracion: declaracion COR_A listaTipos COR_C DOS_PUNTOS COR_A listaVar . COR_C
   21 listaVar: listaVar . COMA ID

    COR_C  desplazar e ir al estado 105
    COMA   desplazar e ir al estado 101


estado 103

   28 seleccion: IF condicion LLAVE_A cuerpoPrograma LLAVE_C ELSE LLAVE_A cuerpoPrograma LLAVE_C .

    $default  reduce usando la regla 28 (seleccion)


estado 104

   21 listaVar: listaVar COMA ID .

    $default  reduce usando la regla 21 (listaVar)


estado 105

   15 declaracion: declaracion COR_A listaTipos COR_C DOS_PUNTOS COR_A listaVar COR_C .

    $default  reduce usando la regla 15 (declaracion)
